# Parser generated by nitcc for the grammar beer
import nitcc_runtime
class Parser_beer
	super Parser
	redef fun start_state do return state_Start
end
redef class Object
	private fun state_Start: LRStateStart do return once new LRStateStart
	private fun state_prog: LRStateprog do return once new LRStateprog
	private fun state_recipe: LRStaterecipe do return once new LRStaterecipe
	private fun state_kw_recipe: LRStatekw_recipe do return once new LRStatekw_recipe
	private fun state_prog_32dEof: LRStateprog_32dEof do return once new LRStateprog_32dEof
	private fun state_recipe_32dequipment: LRStaterecipe_32dequipment do return once new LRStaterecipe_32dequipment
	private fun state_recipe_32dkw_equipment: LRStaterecipe_32dkw_equipment do return once new LRStaterecipe_32dkw_equipment
	private fun state_kw_recipe_32dstring: LRStatekw_recipe_32dstring do return once new LRStatekw_recipe_32dstring
	private fun state_recipe_32dequipment_32dfermentables: LRStaterecipe_32dequipment_32dfermentables do return once new LRStaterecipe_32dequipment_32dfermentables
	private fun state_recipe_32dequipment_32dkw_fermentables: LRStaterecipe_32dequipment_32dkw_fermentables do return once new LRStaterecipe_32dequipment_32dkw_fermentables
	private fun state_recipe_32dkw_equipment_32dstring: LRStaterecipe_32dkw_equipment_32dstring do return once new LRStaterecipe_32dkw_equipment_32dstring
	private fun state_kw_recipe_32dstring_32drecipe_body_43d: LRStatekw_recipe_32dstring_32drecipe_body_43d do return once new LRStatekw_recipe_32dstring_32drecipe_body_43d
	private fun state_kw_recipe_32dstring_32drecipe_body: LRStatekw_recipe_32dstring_32drecipe_body do return once new LRStatekw_recipe_32dstring_32drecipe_body
	private fun state_kw_recipe_32dstring_32d_39dvolume_39d: LRStatekw_recipe_32dstring_32d_39dvolume_39d do return once new LRStatekw_recipe_32dstring_32d_39dvolume_39d
	private fun state_kw_recipe_32dstring_32d_39dmash_temp_39d: LRStatekw_recipe_32dstring_32d_39dmash_temp_39d do return once new LRStatekw_recipe_32dstring_32d_39dmash_temp_39d
	private fun state_recipe_32dequipment_32dfermentables_32dhops: LRStaterecipe_32dequipment_32dfermentables_32dhops do return once new LRStaterecipe_32dequipment_32dfermentables_32dhops
	private fun state_recipe_32dequipment_32dfermentables_32dkw_hops: LRStaterecipe_32dequipment_32dfermentables_32dkw_hops do return once new LRStaterecipe_32dequipment_32dfermentables_32dkw_hops
	private fun state_recipe_32dequipment_32dkw_fermentables_32dcompound_43d: LRStaterecipe_32dequipment_32dkw_fermentables_32dcompound_43d do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dcompound_43d
	private fun state_recipe_32dequipment_32dkw_fermentables_32dcompound: LRStaterecipe_32dequipment_32dkw_fermentables_32dcompound do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dcompound
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_grain: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_adjunct: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_adjunct do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_adjunct
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_sugar: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_sugar do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_sugar
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_extract: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_extract do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_extract
	private fun state_recipe_32dkw_equipment_32dstring_32dequipment_body_43d: LRStaterecipe_32dkw_equipment_32dstring_32dequipment_body_43d do return once new LRStaterecipe_32dkw_equipment_32dstring_32dequipment_body_43d
	private fun state_recipe_32dkw_equipment_32dstring_32dequipment_body: LRStaterecipe_32dkw_equipment_32dstring_32dequipment_body do return once new LRStaterecipe_32dkw_equipment_32dstring_32dequipment_body
	private fun state_recipe_32dkw_equipment_32dstring_32d_39dvolume_39d: LRStaterecipe_32dkw_equipment_32dstring_32d_39dvolume_39d do return once new LRStaterecipe_32dkw_equipment_32dstring_32d_39dvolume_39d
	private fun state_recipe_32dkw_equipment_32dstring_32d_39defficiency_39d: LRStaterecipe_32dkw_equipment_32dstring_32d_39defficiency_39d do return once new LRStaterecipe_32dkw_equipment_32dstring_32d_39defficiency_39d
	private fun state_kw_recipe_32dstring_32drecipe_body_43d_32drecipe_body: LRStatekw_recipe_32dstring_32drecipe_body_43d_32drecipe_body do return once new LRStatekw_recipe_32dstring_32drecipe_body_43d_32drecipe_body
	private fun state_kw_recipe_32dstring_32d_39dvolume_39d_32dvolunit: LRStatekw_recipe_32dstring_32d_39dvolume_39d_32dvolunit do return once new LRStatekw_recipe_32dstring_32d_39dvolume_39d_32dvolunit
	private fun state_kw_recipe_32dstring_32d_39dvolume_39d_32dnumber: LRStatekw_recipe_32dstring_32d_39dvolume_39d_32dnumber do return once new LRStatekw_recipe_32dstring_32d_39dvolume_39d_32dnumber
	private fun state_kw_recipe_32dstring_32d_39dmash_temp_39d_32dtmpunit: LRStatekw_recipe_32dstring_32d_39dmash_temp_39d_32dtmpunit do return once new LRStatekw_recipe_32dstring_32d_39dmash_temp_39d_32dtmpunit
	private fun state_kw_recipe_32dstring_32d_39dmash_temp_39d_32dnumber: LRStatekw_recipe_32dstring_32d_39dmash_temp_39d_32dnumber do return once new LRStatekw_recipe_32dstring_32d_39dmash_temp_39d_32dnumber
	private fun state_recipe_32dequipment_32dfermentables_32dhops_32dyeast: LRStaterecipe_32dequipment_32dfermentables_32dhops_32dyeast do return once new LRStaterecipe_32dequipment_32dfermentables_32dhops_32dyeast
	private fun state_recipe_32dequipment_32dfermentables_32dhops_32dkw_yeast: LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast do return once new LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast
	private fun state_recipe_32dequipment_32dfermentables_32dkw_hops_32dhop_profile_43d: LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dhop_profile_43d do return once new LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dhop_profile_43d
	private fun state_recipe_32dequipment_32dfermentables_32dkw_hops_32dhop_profile: LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dhop_profile do return once new LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dhop_profile
	private fun state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop: LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop do return once new LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop
	private fun state_recipe_32dequipment_32dkw_fermentables_32dcompound_43d_32dcompound: LRStaterecipe_32dequipment_32dkw_fermentables_32dcompound_43d_32dcompound do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dcompound_43d_32dcompound
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring
	private fun state_recipe_32dkw_equipment_32dstring_32dequipment_body_43d_32dequipment_body: LRStaterecipe_32dkw_equipment_32dstring_32dequipment_body_43d_32dequipment_body do return once new LRStaterecipe_32dkw_equipment_32dstring_32dequipment_body_43d_32dequipment_body
	private fun state_recipe_32dkw_equipment_32dstring_32d_39dvolume_39d_32dvolunit: LRStaterecipe_32dkw_equipment_32dstring_32d_39dvolume_39d_32dvolunit do return once new LRStaterecipe_32dkw_equipment_32dstring_32d_39dvolume_39d_32dvolunit
	private fun state_recipe_32dkw_equipment_32dstring_32d_39defficiency_39d_32dnumber: LRStaterecipe_32dkw_equipment_32dstring_32d_39defficiency_39d_32dnumber do return once new LRStaterecipe_32dkw_equipment_32dstring_32d_39defficiency_39d_32dnumber
	private fun state_kw_recipe_32dstring_32d_39dvolume_39d_32dnumber_32dvolume_unit: LRStatekw_recipe_32dstring_32d_39dvolume_39d_32dnumber_32dvolume_unit do return once new LRStatekw_recipe_32dstring_32d_39dvolume_39d_32dnumber_32dvolume_unit
	private fun state_kw_recipe_32dstring_32d_39dmash_temp_39d_32dnumber_32dtemp_unit: LRStatekw_recipe_32dstring_32d_39dmash_temp_39d_32dnumber_32dtemp_unit do return once new LRStatekw_recipe_32dstring_32d_39dmash_temp_39d_32dnumber_32dtemp_unit
	private fun state_recipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring: LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring do return once new LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring
	private fun state_recipe_32dequipment_32dfermentables_32dkw_hops_32dhop_profile_43d_32dhop_profile: LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dhop_profile_43d_32dhop_profile do return once new LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dhop_profile_43d_32dhop_profile
	private fun state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring: LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring do return once new LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body_43d: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body_43d do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body_43d
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring_32dcompound_body_43d: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring_32dcompound_body_43d do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring_32dcompound_body_43d
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring_32dcompound_body_43d: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring_32dcompound_body_43d do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring_32dcompound_body_43d
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring_32dcompound_body_43d: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring_32dcompound_body_43d do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring_32dcompound_body_43d
	private fun state_recipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32dyeast_body_43d: LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32dyeast_body_43d do return once new LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32dyeast_body_43d
	private fun state_recipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32dyeast_body: LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32dyeast_body do return once new LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32dyeast_body
	private fun state_recipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dflocculation_39d: LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dflocculation_39d do return once new LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dflocculation_39d
	private fun state_recipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dattenuation_39d: LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dattenuation_39d do return once new LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dattenuation_39d
	private fun state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body_43d: LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body_43d do return once new LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body_43d
	private fun state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body: LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body do return once new LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body
	private fun state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dalpha_39d: LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dalpha_39d do return once new LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dalpha_39d
	private fun state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dquantity_39d: LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dquantity_39d do return once new LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dquantity_39d
	private fun state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d: LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d do return once new LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d
	private fun state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtype_39d: LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtype_39d do return once new LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtype_39d
	private fun state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39duse_39d: LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39duse_39d do return once new LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39duse_39d
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body_43d_32dcompound_body: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body_43d_32dcompound_body do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body_43d_32dcompound_body
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d_32dgrvunit: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d_32dgrvunit do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d_32dgrvunit
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d_32dnumber: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d_32dnumber do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d_32dnumber
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d_32dcolunit: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d_32dcolunit do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d_32dcolunit
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d_32dnumber: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d_32dnumber do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d_32dnumber
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d_32dweiunit: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d_32dweiunit do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d_32dweiunit
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d_32dnumber: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d_32dnumber do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d_32dnumber
	private fun state_recipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32dyeast_body_43d_32dyeast_body: LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32dyeast_body_43d_32dyeast_body do return once new LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32dyeast_body_43d_32dyeast_body
	private fun state_recipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dflocculation_39d_32dflocculation_type: LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dflocculation_39d_32dflocculation_type do return once new LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dflocculation_39d_32dflocculation_type
	private fun state_recipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dattenuation_39d_32dnumber: LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dattenuation_39d_32dnumber do return once new LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dattenuation_39d_32dnumber
	private fun state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body_43d_32dhop_profile_body: LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body_43d_32dhop_profile_body do return once new LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body_43d_32dhop_profile_body
	private fun state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dalpha_39d_32dnumber: LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dalpha_39d_32dnumber do return once new LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dalpha_39d_32dnumber
	private fun state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dquantity_39d_32dweiunit: LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dquantity_39d_32dweiunit do return once new LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dquantity_39d_32dweiunit
	private fun state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d_32dtimunit: LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d_32dtimunit do return once new LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d_32dtimunit
	private fun state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d_32dnumber: LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d_32dnumber do return once new LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d_32dnumber
	private fun state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtype_39d_32dhop_type: LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtype_39d_32dhop_type do return once new LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtype_39d_32dhop_type
	private fun state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39duse_39d_32dhop_use: LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39duse_39d_32dhop_use do return once new LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39duse_39d_32dhop_use
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d_32dnumber_32dgravity_unit: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d_32dnumber_32dgravity_unit do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d_32dnumber_32dgravity_unit
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d_32dnumber_32dcolour_unit: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d_32dnumber_32dcolour_unit do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d_32dnumber_32dcolour_unit
	private fun state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d_32dnumber_32dweight_unit: LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d_32dnumber_32dweight_unit do return once new LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d_32dnumber_32dweight_unit
	private fun state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d_32dnumber_32dtime_unit: LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d_32dnumber_32dtime_unit do return once new LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d_32dnumber_32dtime_unit
	private fun goto_Nprog: Goto_Nprog do return once new Goto_Nprog
	private fun goto_Nvolunit: Goto_Nvolunit do return once new Goto_Nvolunit
	private fun goto_Ntmpunit: Goto_Ntmpunit do return once new Goto_Ntmpunit
	private fun goto_Ngrvunit: Goto_Ngrvunit do return once new Goto_Ngrvunit
	private fun goto_Ncolunit: Goto_Ncolunit do return once new Goto_Ncolunit
	private fun goto_Nweiunit: Goto_Nweiunit do return once new Goto_Nweiunit
	private fun goto_Ntimunit: Goto_Ntimunit do return once new Goto_Ntimunit
	private fun goto_Nrecipe: Goto_Nrecipe do return once new Goto_Nrecipe
	private fun goto_Nrecipe_body: Goto_Nrecipe_body do return once new Goto_Nrecipe_body
	private fun goto_Nequipment: Goto_Nequipment do return once new Goto_Nequipment
	private fun goto_Nequipment_body: Goto_Nequipment_body do return once new Goto_Nequipment_body
	private fun goto_Nfermentables: Goto_Nfermentables do return once new Goto_Nfermentables
	private fun goto_Ncompound: Goto_Ncompound do return once new Goto_Ncompound
	private fun goto_Ncompound_body: Goto_Ncompound_body do return once new Goto_Ncompound_body
	private fun goto_Nhops: Goto_Nhops do return once new Goto_Nhops
	private fun goto_Nhop_profile: Goto_Nhop_profile do return once new Goto_Nhop_profile
	private fun goto_Nhop_profile_body: Goto_Nhop_profile_body do return once new Goto_Nhop_profile_body
	private fun goto_Nyeast: Goto_Nyeast do return once new Goto_Nyeast
	private fun goto_Nyeast_body: Goto_Nyeast_body do return once new Goto_Nyeast_body
	private fun goto_Nrecipe_body_43d: Goto_Nrecipe_body_43d do return once new Goto_Nrecipe_body_43d
	private fun goto_Nequipment_body_43d: Goto_Nequipment_body_43d do return once new Goto_Nequipment_body_43d
	private fun goto_Ncompound_43d: Goto_Ncompound_43d do return once new Goto_Ncompound_43d
	private fun goto_Ncompound_body_43d: Goto_Ncompound_body_43d do return once new Goto_Ncompound_body_43d
	private fun goto_Nhop_profile_43d: Goto_Nhop_profile_43d do return once new Goto_Nhop_profile_43d
	private fun goto_Nhop_profile_body_43d: Goto_Nhop_profile_body_43d do return once new Goto_Nhop_profile_body_43d
	private fun goto_Nyeast_body_43d: Goto_Nyeast_body_43d do return once new Goto_Nyeast_body_43d
	private fun goto_N_start: Goto_N_start do return once new Goto_N_start
end
redef class NToken
	# guarded action for state Start
	# 1 shift(s) and 0 reduce(s)
	private fun action_sStart(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state prog
	# 1 shift(s) and 0 reduce(s)
	private fun action_sprog(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state kw_recipe
	# 1 shift(s) and 0 reduce(s)
	private fun action_skw_recipe(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe kw_equipment
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dkw_equipment(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state kw_recipe string
	# 2 shift(s) and 0 reduce(s)
	private fun action_skw_recipe_32dstring(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment fermentables
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dfermentables(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment kw_fermentables
	# 4 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dkw_fermentables(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe kw_equipment string
	# 2 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dkw_equipment_32dstring(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state kw_recipe string recipe_body+
	# 2 shift(s) and 1 reduce(s)
	private fun action_skw_recipe_32dstring_32drecipe_body_43d(parser: Parser) do
		# REDUCE recipe::recipe=kw_recipe string recipe_body+
		var n2 = parser.pop.as(Nodes[Nrecipe_body])
		var n1 = parser.pop.as(Nstring)
		var n0 = parser.pop.as(Nkw_recipe)
		var p1 = new Nrecipe(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nrecipe)
	end
	# guarded action for state kw_recipe string 'volume'
	# 1 shift(s) and 0 reduce(s)
	private fun action_skw_recipe_32dstring_32d_39dvolume_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state kw_recipe string 'mash_temp'
	# 1 shift(s) and 0 reduce(s)
	private fun action_skw_recipe_32dstring_32d_39dmash_temp_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment fermentables hops
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dfermentables_32dhops(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment fermentables kw_hops
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dfermentables_32dkw_hops(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment kw_fermentables compound+
	# 4 shift(s) and 1 reduce(s)
	private fun action_srecipe_32dequipment_32dkw_fermentables_32dcompound_43d(parser: Parser) do
		# REDUCE fermentables::fermentables=kw_fermentables compound+
		var n1 = parser.pop.as(Nodes[Ncompound])
		var n0 = parser.pop.as(Nkw_fermentables)
		var p1 = new Nfermentables(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nfermentables)
	end
	# guarded action for state recipe equipment kw_fermentables kw_grain
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment kw_fermentables kw_adjunct
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_adjunct(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment kw_fermentables kw_sugar
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_sugar(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment kw_fermentables kw_extract
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_extract(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe kw_equipment string equipment_body+
	# 2 shift(s) and 1 reduce(s)
	private fun action_srecipe_32dkw_equipment_32dstring_32dequipment_body_43d(parser: Parser) do
		# REDUCE equipment::equipment=kw_equipment string equipment_body+
		var n2 = parser.pop.as(Nodes[Nequipment_body])
		var n1 = parser.pop.as(Nstring)
		var n0 = parser.pop.as(Nkw_equipment)
		var p1 = new Nequipment(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nequipment)
	end
	# guarded action for state recipe kw_equipment string 'volume'
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dkw_equipment_32dstring_32d_39dvolume_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe kw_equipment string 'efficiency'
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dkw_equipment_32dstring_32d_39defficiency_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state kw_recipe string 'volume' number
	# 1 shift(s) and 0 reduce(s)
	private fun action_skw_recipe_32dstring_32d_39dvolume_39d_32dnumber(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state kw_recipe string 'mash_temp' number
	# 1 shift(s) and 0 reduce(s)
	private fun action_skw_recipe_32dstring_32d_39dmash_temp_39d_32dnumber(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment fermentables hops kw_yeast
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment fermentables kw_hops hop_profile+
	# 1 shift(s) and 1 reduce(s)
	private fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dhop_profile_43d(parser: Parser) do
		# REDUCE hops::hops=kw_hops hop_profile+
		var n1 = parser.pop.as(Nodes[Nhop_profile])
		var n0 = parser.pop.as(Nkw_hops)
		var p1 = new Nhops(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nhops)
	end
	# guarded action for state recipe equipment fermentables kw_hops kw_hop
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment kw_fermentables kw_grain string
	# 3 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment kw_fermentables kw_adjunct string
	# 3 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment kw_fermentables kw_sugar string
	# 3 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment kw_fermentables kw_extract string
	# 3 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment fermentables hops kw_yeast string
	# 2 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment fermentables kw_hops kw_hop string
	# 5 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment kw_fermentables kw_grain string compound_body+
	# 3 shift(s) and 1 reduce(s)
	private fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body_43d(parser: Parser) do
		# REDUCE compound::compound_grain=kw_grain string compound_body+
		var n2 = parser.pop.as(Nodes[Ncompound_body])
		var n1 = parser.pop.as(Nstring)
		var n0 = parser.pop.as(Nkw_grain)
		var p1 = new Ncompound_grain(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Ncompound)
	end
	# guarded action for state recipe equipment kw_fermentables kw_grain string 'potential'
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment kw_fermentables kw_grain string 'colour'
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment kw_fermentables kw_grain string 'quantity'
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment kw_fermentables kw_adjunct string compound_body+
	# 3 shift(s) and 1 reduce(s)
	private fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring_32dcompound_body_43d(parser: Parser) do
		# REDUCE compound::compound_adjunct=kw_adjunct string compound_body+
		var n2 = parser.pop.as(Nodes[Ncompound_body])
		var n1 = parser.pop.as(Nstring)
		var n0 = parser.pop.as(Nkw_adjunct)
		var p1 = new Ncompound_adjunct(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Ncompound)
	end
	# guarded action for state recipe equipment kw_fermentables kw_sugar string compound_body+
	# 3 shift(s) and 1 reduce(s)
	private fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring_32dcompound_body_43d(parser: Parser) do
		# REDUCE compound::compound_sugar=kw_sugar string compound_body+
		var n2 = parser.pop.as(Nodes[Ncompound_body])
		var n1 = parser.pop.as(Nstring)
		var n0 = parser.pop.as(Nkw_sugar)
		var p1 = new Ncompound_sugar(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Ncompound)
	end
	# guarded action for state recipe equipment kw_fermentables kw_extract string compound_body+
	# 3 shift(s) and 1 reduce(s)
	private fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring_32dcompound_body_43d(parser: Parser) do
		# REDUCE compound::compound_extract=kw_extract string compound_body+
		var n2 = parser.pop.as(Nodes[Ncompound_body])
		var n1 = parser.pop.as(Nstring)
		var n0 = parser.pop.as(Nkw_extract)
		var p1 = new Ncompound_extract(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Ncompound)
	end
	# guarded action for state recipe equipment fermentables hops kw_yeast string yeast_body+
	# 2 shift(s) and 1 reduce(s)
	private fun action_srecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32dyeast_body_43d(parser: Parser) do
		# REDUCE yeast::yeast=kw_yeast string yeast_body+
		var n2 = parser.pop.as(Nodes[Nyeast_body])
		var n1 = parser.pop.as(Nstring)
		var n0 = parser.pop.as(Nkw_yeast)
		var p1 = new Nyeast(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nyeast)
	end
	# guarded action for state recipe equipment fermentables hops kw_yeast string 'flocculation'
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dflocculation_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment fermentables hops kw_yeast string 'attenuation'
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dattenuation_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment fermentables kw_hops kw_hop string hop_profile_body+
	# 5 shift(s) and 1 reduce(s)
	private fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body_43d(parser: Parser) do
		# REDUCE hop_profile::hop_profile=kw_hop string hop_profile_body+
		var n2 = parser.pop.as(Nodes[Nhop_profile_body])
		var n1 = parser.pop.as(Nstring)
		var n0 = parser.pop.as(Nkw_hop)
		var p1 = new Nhop_profile(n0, n1, n2)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nhop_profile)
	end
	# guarded action for state recipe equipment fermentables kw_hops kw_hop string 'alpha'
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dalpha_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment fermentables kw_hops kw_hop string 'quantity'
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dquantity_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment fermentables kw_hops kw_hop string 'time'
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment fermentables kw_hops kw_hop string 'type'
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtype_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment fermentables kw_hops kw_hop string 'use'
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39duse_39d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment kw_fermentables kw_grain string 'potential' number
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d_32dnumber(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment kw_fermentables kw_grain string 'colour' number
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d_32dnumber(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment kw_fermentables kw_grain string 'quantity' number
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d_32dnumber(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state recipe equipment fermentables kw_hops kw_hop string 'time' number
	# 1 shift(s) and 0 reduce(s)
	private fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d_32dnumber(parser: Parser) do
		parser.parse_error
	end
end
class Nnumber
	super NToken
	redef fun action_skw_recipe_32dstring_32d_39dvolume_39d(parser) do
		parser.shift(state_kw_recipe_32dstring_32d_39dvolume_39d_32dnumber)
	end
	redef fun action_skw_recipe_32dstring_32d_39dmash_temp_39d(parser) do
		parser.shift(state_kw_recipe_32dstring_32d_39dmash_temp_39d_32dnumber)
	end
	redef fun action_srecipe_32dkw_equipment_32dstring_32d_39dvolume_39d(parser) do
		parser.shift(state_kw_recipe_32dstring_32d_39dvolume_39d_32dnumber)
	end
	redef fun action_srecipe_32dkw_equipment_32dstring_32d_39defficiency_39d(parser) do
		parser.shift(state_recipe_32dkw_equipment_32dstring_32d_39defficiency_39d_32dnumber)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d_32dnumber)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d_32dnumber)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d_32dnumber)
	end
	redef fun action_srecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dattenuation_39d(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dattenuation_39d_32dnumber)
	end
	redef fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dalpha_39d(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dalpha_39d_32dnumber)
	end
	redef fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dquantity_39d(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d_32dnumber)
	end
	redef fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d_32dnumber)
	end
	redef fun node_name do return "number"
end
class Nvolume_unit
	super NToken
	redef fun action_skw_recipe_32dstring_32d_39dvolume_39d_32dnumber(parser) do
		parser.shift(state_kw_recipe_32dstring_32d_39dvolume_39d_32dnumber_32dvolume_unit)
	end
	redef fun node_name do return "volume_unit"
end
class Ntemp_unit
	super NToken
	redef fun action_skw_recipe_32dstring_32d_39dmash_temp_39d_32dnumber(parser) do
		parser.shift(state_kw_recipe_32dstring_32d_39dmash_temp_39d_32dnumber_32dtemp_unit)
	end
	redef fun node_name do return "temp_unit"
end
class Ngravity_unit
	super NToken
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d_32dnumber(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d_32dnumber_32dgravity_unit)
	end
	redef fun node_name do return "gravity_unit"
end
class Ncolour_unit
	super NToken
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d_32dnumber(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d_32dnumber_32dcolour_unit)
	end
	redef fun node_name do return "colour_unit"
end
class Nweight_unit
	super NToken
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d_32dnumber(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d_32dnumber_32dweight_unit)
	end
	redef fun node_name do return "weight_unit"
end
class Ntime_unit
	super NToken
	redef fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d_32dnumber(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d_32dnumber_32dtime_unit)
	end
	redef fun node_name do return "time_unit"
end
class Nkw_recipe
	super NToken
	redef fun action_sStart(parser) do
		parser.shift(state_kw_recipe)
	end
	redef fun node_name do return "kw_recipe"
end
class Nstring
	super NToken
	redef fun action_skw_recipe(parser) do
		parser.shift(state_kw_recipe_32dstring)
	end
	redef fun action_srecipe_32dkw_equipment(parser) do
		parser.shift(state_recipe_32dkw_equipment_32dstring)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_adjunct(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_sugar(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_extract(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring)
	end
	redef fun action_srecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring)
	end
	redef fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring)
	end
	redef fun node_name do return "string"
end
class N_39dvolume_39d
	super NToken
	redef fun action_skw_recipe_32dstring(parser) do
		parser.shift(state_kw_recipe_32dstring_32d_39dvolume_39d)
	end
	redef fun action_srecipe_32dkw_equipment_32dstring(parser) do
		parser.shift(state_recipe_32dkw_equipment_32dstring_32d_39dvolume_39d)
	end
	redef fun action_skw_recipe_32dstring_32drecipe_body_43d(parser) do
		parser.shift(state_kw_recipe_32dstring_32d_39dvolume_39d)
	end
	redef fun action_srecipe_32dkw_equipment_32dstring_32dequipment_body_43d(parser) do
		parser.shift(state_recipe_32dkw_equipment_32dstring_32d_39dvolume_39d)
	end
	redef fun node_name do return "\'volume\'"
end
class N_39dmash_temp_39d
	super NToken
	redef fun action_skw_recipe_32dstring(parser) do
		parser.shift(state_kw_recipe_32dstring_32d_39dmash_temp_39d)
	end
	redef fun action_skw_recipe_32dstring_32drecipe_body_43d(parser) do
		parser.shift(state_kw_recipe_32dstring_32d_39dmash_temp_39d)
	end
	redef fun node_name do return "\'mash_temp\'"
end
class Nkw_equipment
	super NToken
	redef fun action_srecipe(parser) do
		parser.shift(state_recipe_32dkw_equipment)
	end
	redef fun node_name do return "kw_equipment"
end
class N_39defficiency_39d
	super NToken
	redef fun action_srecipe_32dkw_equipment_32dstring(parser) do
		parser.shift(state_recipe_32dkw_equipment_32dstring_32d_39defficiency_39d)
	end
	redef fun action_srecipe_32dkw_equipment_32dstring_32dequipment_body_43d(parser) do
		parser.shift(state_recipe_32dkw_equipment_32dstring_32d_39defficiency_39d)
	end
	redef fun node_name do return "\'efficiency\'"
end
class Nkw_fermentables
	super NToken
	redef fun action_srecipe_32dequipment(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables)
	end
	redef fun node_name do return "kw_fermentables"
end
class Nkw_grain
	super NToken
	redef fun action_srecipe_32dequipment_32dkw_fermentables(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dcompound_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain)
	end
	redef fun node_name do return "kw_grain"
end
class Nkw_adjunct
	super NToken
	redef fun action_srecipe_32dequipment_32dkw_fermentables(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_adjunct)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dcompound_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_adjunct)
	end
	redef fun node_name do return "kw_adjunct"
end
class Nkw_sugar
	super NToken
	redef fun action_srecipe_32dequipment_32dkw_fermentables(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_sugar)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dcompound_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_sugar)
	end
	redef fun node_name do return "kw_sugar"
end
class Nkw_extract
	super NToken
	redef fun action_srecipe_32dequipment_32dkw_fermentables(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_extract)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dcompound_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_extract)
	end
	redef fun node_name do return "kw_extract"
end
class N_39dpotential_39d
	super NToken
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring_32dcompound_body_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring_32dcompound_body_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring_32dcompound_body_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d)
	end
	redef fun node_name do return "\'potential\'"
end
class N_39dcolour_39d
	super NToken
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring_32dcompound_body_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring_32dcompound_body_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring_32dcompound_body_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d)
	end
	redef fun node_name do return "\'colour\'"
end
class N_39dquantity_39d
	super NToken
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d)
	end
	redef fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dquantity_39d)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring_32dcompound_body_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring_32dcompound_body_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d)
	end
	redef fun action_srecipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring_32dcompound_body_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d)
	end
	redef fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dquantity_39d)
	end
	redef fun node_name do return "\'quantity\'"
end
class Nkw_hops
	super NToken
	redef fun action_srecipe_32dequipment_32dfermentables(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dkw_hops)
	end
	redef fun node_name do return "kw_hops"
end
class Nkw_hop
	super NToken
	redef fun action_srecipe_32dequipment_32dfermentables_32dkw_hops(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop)
	end
	redef fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dhop_profile_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop)
	end
	redef fun node_name do return "kw_hop"
end
class N_39dalpha_39d
	super NToken
	redef fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dalpha_39d)
	end
	redef fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dalpha_39d)
	end
	redef fun node_name do return "\'alpha\'"
end
class N_39dtime_39d
	super NToken
	redef fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d)
	end
	redef fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d)
	end
	redef fun node_name do return "\'time\'"
end
class N_39dtype_39d
	super NToken
	redef fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtype_39d)
	end
	redef fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtype_39d)
	end
	redef fun node_name do return "\'type\'"
end
class Nhop_type
	super NToken
	redef fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtype_39d(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtype_39d_32dhop_type)
	end
	redef fun node_name do return "hop_type"
end
class N_39duse_39d
	super NToken
	redef fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39duse_39d)
	end
	redef fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39duse_39d)
	end
	redef fun node_name do return "\'use\'"
end
class Nhop_use
	super NToken
	redef fun action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39duse_39d(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39duse_39d_32dhop_use)
	end
	redef fun node_name do return "hop_use"
end
class Nkw_yeast
	super NToken
	redef fun action_srecipe_32dequipment_32dfermentables_32dhops(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dhops_32dkw_yeast)
	end
	redef fun node_name do return "kw_yeast"
end
class N_39dflocculation_39d
	super NToken
	redef fun action_srecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dflocculation_39d)
	end
	redef fun action_srecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32dyeast_body_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dflocculation_39d)
	end
	redef fun node_name do return "\'flocculation\'"
end
class Nflocculation_type
	super NToken
	redef fun action_srecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dflocculation_39d(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dflocculation_39d_32dflocculation_type)
	end
	redef fun node_name do return "flocculation_type"
end
class N_39dattenuation_39d
	super NToken
	redef fun action_srecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dattenuation_39d)
	end
	redef fun action_srecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32dyeast_body_43d(parser) do
		parser.shift(state_recipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dattenuation_39d)
	end
	redef fun node_name do return "\'attenuation\'"
end
redef class NEof
	super NToken
	redef fun action_sprog(parser) do
		parser.shift(state_prog_32dEof)
	end
	redef fun node_name do return "Eof"
end
redef class LRGoto
	private fun goto_sStart(parser: Parser) do abort
	private fun goto_skw_recipe_32dstring(parser: Parser) do abort
	private fun goto_srecipe_32dequipment_32dkw_fermentables(parser: Parser) do abort
	private fun goto_srecipe_32dkw_equipment_32dstring(parser: Parser) do abort
	private fun goto_srecipe_32dequipment_32dfermentables_32dkw_hops(parser: Parser) do abort
	private fun goto_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring(parser: Parser) do abort
	private fun goto_srecipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring(parser: Parser) do abort
	private fun goto_srecipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring(parser: Parser) do abort
	private fun goto_srecipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring(parser: Parser) do abort
	private fun goto_srecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring(parser: Parser) do abort
	private fun goto_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring(parser: Parser) do abort
end
class Goto_Nprog
	super LRGoto
	redef fun goto_sStart(parser) do
		parser.push(state_prog)
	end
end
class Goto_Nvolunit
	super LRGoto
end
class Goto_Ntmpunit
	super LRGoto
end
class Goto_Ngrvunit
	super LRGoto
end
class Goto_Ncolunit
	super LRGoto
end
class Goto_Nweiunit
	super LRGoto
end
class Goto_Ntimunit
	super LRGoto
end
class Goto_Nrecipe
	super LRGoto
	redef fun goto_sStart(parser) do
		parser.push(state_recipe)
	end
end
class Goto_Nrecipe_body
	super LRGoto
	redef fun goto_skw_recipe_32dstring(parser) do
		parser.push(state_kw_recipe_32dstring_32drecipe_body)
	end
end
class Goto_Nequipment
	super LRGoto
end
class Goto_Nequipment_body
	super LRGoto
	redef fun goto_srecipe_32dkw_equipment_32dstring(parser) do
		parser.push(state_recipe_32dkw_equipment_32dstring_32dequipment_body)
	end
end
class Goto_Nfermentables
	super LRGoto
end
class Goto_Ncompound
	super LRGoto
	redef fun goto_srecipe_32dequipment_32dkw_fermentables(parser) do
		parser.push(state_recipe_32dequipment_32dkw_fermentables_32dcompound)
	end
end
class Goto_Ncompound_body
	super LRGoto
	redef fun goto_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring(parser) do
		parser.push(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body)
	end
	redef fun goto_srecipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring(parser) do
		parser.push(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body)
	end
	redef fun goto_srecipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring(parser) do
		parser.push(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body)
	end
	redef fun goto_srecipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring(parser) do
		parser.push(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body)
	end
end
class Goto_Nhops
	super LRGoto
end
class Goto_Nhop_profile
	super LRGoto
	redef fun goto_srecipe_32dequipment_32dfermentables_32dkw_hops(parser) do
		parser.push(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dhop_profile)
	end
end
class Goto_Nhop_profile_body
	super LRGoto
	redef fun goto_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring(parser) do
		parser.push(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body)
	end
end
class Goto_Nyeast
	super LRGoto
end
class Goto_Nyeast_body
	super LRGoto
	redef fun goto_srecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring(parser) do
		parser.push(state_recipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32dyeast_body)
	end
end
class Goto_Nrecipe_body_43d
	super LRGoto
	redef fun goto_skw_recipe_32dstring(parser) do
		parser.push(state_kw_recipe_32dstring_32drecipe_body_43d)
	end
end
class Goto_Nequipment_body_43d
	super LRGoto
	redef fun goto_srecipe_32dkw_equipment_32dstring(parser) do
		parser.push(state_recipe_32dkw_equipment_32dstring_32dequipment_body_43d)
	end
end
class Goto_Ncompound_43d
	super LRGoto
	redef fun goto_srecipe_32dequipment_32dkw_fermentables(parser) do
		parser.push(state_recipe_32dequipment_32dkw_fermentables_32dcompound_43d)
	end
end
class Goto_Ncompound_body_43d
	super LRGoto
	redef fun goto_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring(parser) do
		parser.push(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body_43d)
	end
	redef fun goto_srecipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring(parser) do
		parser.push(state_recipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring_32dcompound_body_43d)
	end
	redef fun goto_srecipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring(parser) do
		parser.push(state_recipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring_32dcompound_body_43d)
	end
	redef fun goto_srecipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring(parser) do
		parser.push(state_recipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring_32dcompound_body_43d)
	end
end
class Goto_Nhop_profile_43d
	super LRGoto
	redef fun goto_srecipe_32dequipment_32dfermentables_32dkw_hops(parser) do
		parser.push(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dhop_profile_43d)
	end
end
class Goto_Nhop_profile_body_43d
	super LRGoto
	redef fun goto_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring(parser) do
		parser.push(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body_43d)
	end
end
class Goto_Nyeast_body_43d
	super LRGoto
	redef fun goto_srecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring(parser) do
		parser.push(state_recipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32dyeast_body_43d)
	end
end
class Goto_N_start
	super LRGoto
end
class Nprog
	super NProd
	redef fun node_name do return "prog"
	var n_recipe: Nrecipe
	var n_equipment: Nequipment
	var n_fermentables: Nfermentables
	var n_hops: Nhops
	var n_yeast: Nyeast
	init(n_recipe: Nrecipe, n_equipment: Nequipment, n_fermentables: Nfermentables, n_hops: Nhops, n_yeast: Nyeast) do
		self.n_recipe = n_recipe
		self.n_equipment = n_equipment
		self.n_fermentables = n_fermentables
		self.n_hops = n_hops
		self.n_yeast = n_yeast
	end
	redef fun number_of_children do return 5
	redef fun child(i) do
		if i == 0 then return n_recipe
		if i == 1 then return n_equipment
		if i == 2 then return n_fermentables
		if i == 3 then return n_hops
		if i == 4 then return n_yeast
		abort
	end
end
class Nvolunit
	super NProd
	redef fun node_name do return "volunit"
	var n_number: Nnumber
	var n_volume_unit: Nvolume_unit
	init(n_number: Nnumber, n_volume_unit: Nvolume_unit) do
		self.n_number = n_number
		self.n_volume_unit = n_volume_unit
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_number
		if i == 1 then return n_volume_unit
		abort
	end
end
class Ntmpunit
	super NProd
	redef fun node_name do return "tmpunit"
	var n_number: Nnumber
	var n_temp_unit: Ntemp_unit
	init(n_number: Nnumber, n_temp_unit: Ntemp_unit) do
		self.n_number = n_number
		self.n_temp_unit = n_temp_unit
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_number
		if i == 1 then return n_temp_unit
		abort
	end
end
class Ngrvunit
	super NProd
	redef fun node_name do return "grvunit"
	var n_number: Nnumber
	var n_gravity_unit: Ngravity_unit
	init(n_number: Nnumber, n_gravity_unit: Ngravity_unit) do
		self.n_number = n_number
		self.n_gravity_unit = n_gravity_unit
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_number
		if i == 1 then return n_gravity_unit
		abort
	end
end
class Ncolunit
	super NProd
	redef fun node_name do return "colunit"
	var n_number: Nnumber
	var n_colour_unit: Ncolour_unit
	init(n_number: Nnumber, n_colour_unit: Ncolour_unit) do
		self.n_number = n_number
		self.n_colour_unit = n_colour_unit
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_number
		if i == 1 then return n_colour_unit
		abort
	end
end
class Nweiunit
	super NProd
	redef fun node_name do return "weiunit"
	var n_number: Nnumber
	var n_weight_unit: Nweight_unit
	init(n_number: Nnumber, n_weight_unit: Nweight_unit) do
		self.n_number = n_number
		self.n_weight_unit = n_weight_unit
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_number
		if i == 1 then return n_weight_unit
		abort
	end
end
class Ntimunit
	super NProd
	redef fun node_name do return "timunit"
	var n_number: Nnumber
	var n_time_unit: Ntime_unit
	init(n_number: Nnumber, n_time_unit: Ntime_unit) do
		self.n_number = n_number
		self.n_time_unit = n_time_unit
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_number
		if i == 1 then return n_time_unit
		abort
	end
end
class Nrecipe
	super NProd
	redef fun node_name do return "recipe"
	var n_kw_recipe: Nkw_recipe
	var n_string: Nstring
	var n_recipe_body: Nodes[Nrecipe_body]
	init(n_kw_recipe: Nkw_recipe, n_string: Nstring, n_recipe_body: Nodes[Nrecipe_body]) do
		self.n_kw_recipe = n_kw_recipe
		self.n_string = n_string
		self.n_recipe_body = n_recipe_body
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_kw_recipe
		if i == 1 then return n_string
		if i == 2 then return n_recipe_body
		abort
	end
end
class Nrecipe_body
	super NProd
	redef fun node_name do return "recipe_body"
end
class Nrecipe_body_volume
	super Nrecipe_body
	redef fun node_name do return "recipe_body_volume"
	var n_0: N_39dvolume_39d
	var n_volunit: Nvolunit
	init(n_0: N_39dvolume_39d, n_volunit: Nvolunit) do
		self.n_0 = n_0
		self.n_volunit = n_volunit
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_volunit
		abort
	end
end
class Nrecipe_body_mash_temp
	super Nrecipe_body
	redef fun node_name do return "recipe_body_mash_temp"
	var n_0: N_39dmash_temp_39d
	var n_tmpunit: Ntmpunit
	init(n_0: N_39dmash_temp_39d, n_tmpunit: Ntmpunit) do
		self.n_0 = n_0
		self.n_tmpunit = n_tmpunit
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_tmpunit
		abort
	end
end
class Nequipment
	super NProd
	redef fun node_name do return "equipment"
	var n_kw_equipment: Nkw_equipment
	var n_string: Nstring
	var n_equipment_body: Nodes[Nequipment_body]
	init(n_kw_equipment: Nkw_equipment, n_string: Nstring, n_equipment_body: Nodes[Nequipment_body]) do
		self.n_kw_equipment = n_kw_equipment
		self.n_string = n_string
		self.n_equipment_body = n_equipment_body
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_kw_equipment
		if i == 1 then return n_string
		if i == 2 then return n_equipment_body
		abort
	end
end
class Nequipment_body
	super NProd
	redef fun node_name do return "equipment_body"
end
class Nequipment_body_volume
	super Nequipment_body
	redef fun node_name do return "equipment_body_volume"
	var n_0: N_39dvolume_39d
	var n_volunit: Nvolunit
	init(n_0: N_39dvolume_39d, n_volunit: Nvolunit) do
		self.n_0 = n_0
		self.n_volunit = n_volunit
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_volunit
		abort
	end
end
class Nequipment_body_efficiency
	super Nequipment_body
	redef fun node_name do return "equipment_body_efficiency"
	var n_0: N_39defficiency_39d
	var n_number: Nnumber
	init(n_0: N_39defficiency_39d, n_number: Nnumber) do
		self.n_0 = n_0
		self.n_number = n_number
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_number
		abort
	end
end
class Nfermentables
	super NProd
	redef fun node_name do return "fermentables"
	var n_kw_fermentables: Nkw_fermentables
	var n_compound: Nodes[Ncompound]
	init(n_kw_fermentables: Nkw_fermentables, n_compound: Nodes[Ncompound]) do
		self.n_kw_fermentables = n_kw_fermentables
		self.n_compound = n_compound
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_kw_fermentables
		if i == 1 then return n_compound
		abort
	end
end
class Ncompound
	super NProd
	redef fun node_name do return "compound"
end
class Ncompound_grain
	super Ncompound
	redef fun node_name do return "compound_grain"
	var n_kw_grain: Nkw_grain
	var n_string: Nstring
	var n_compound_body: Nodes[Ncompound_body]
	init(n_kw_grain: Nkw_grain, n_string: Nstring, n_compound_body: Nodes[Ncompound_body]) do
		self.n_kw_grain = n_kw_grain
		self.n_string = n_string
		self.n_compound_body = n_compound_body
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_kw_grain
		if i == 1 then return n_string
		if i == 2 then return n_compound_body
		abort
	end
end
class Ncompound_adjunct
	super Ncompound
	redef fun node_name do return "compound_adjunct"
	var n_kw_adjunct: Nkw_adjunct
	var n_string: Nstring
	var n_compound_body: Nodes[Ncompound_body]
	init(n_kw_adjunct: Nkw_adjunct, n_string: Nstring, n_compound_body: Nodes[Ncompound_body]) do
		self.n_kw_adjunct = n_kw_adjunct
		self.n_string = n_string
		self.n_compound_body = n_compound_body
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_kw_adjunct
		if i == 1 then return n_string
		if i == 2 then return n_compound_body
		abort
	end
end
class Ncompound_sugar
	super Ncompound
	redef fun node_name do return "compound_sugar"
	var n_kw_sugar: Nkw_sugar
	var n_string: Nstring
	var n_compound_body: Nodes[Ncompound_body]
	init(n_kw_sugar: Nkw_sugar, n_string: Nstring, n_compound_body: Nodes[Ncompound_body]) do
		self.n_kw_sugar = n_kw_sugar
		self.n_string = n_string
		self.n_compound_body = n_compound_body
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_kw_sugar
		if i == 1 then return n_string
		if i == 2 then return n_compound_body
		abort
	end
end
class Ncompound_extract
	super Ncompound
	redef fun node_name do return "compound_extract"
	var n_kw_extract: Nkw_extract
	var n_string: Nstring
	var n_compound_body: Nodes[Ncompound_body]
	init(n_kw_extract: Nkw_extract, n_string: Nstring, n_compound_body: Nodes[Ncompound_body]) do
		self.n_kw_extract = n_kw_extract
		self.n_string = n_string
		self.n_compound_body = n_compound_body
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_kw_extract
		if i == 1 then return n_string
		if i == 2 then return n_compound_body
		abort
	end
end
class Ncompound_body
	super NProd
	redef fun node_name do return "compound_body"
end
class Ncompound_body_potential
	super Ncompound_body
	redef fun node_name do return "compound_body_potential"
	var n_0: N_39dpotential_39d
	var n_grvunit: Ngrvunit
	init(n_0: N_39dpotential_39d, n_grvunit: Ngrvunit) do
		self.n_0 = n_0
		self.n_grvunit = n_grvunit
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_grvunit
		abort
	end
end
class Ncompound_body_colour
	super Ncompound_body
	redef fun node_name do return "compound_body_colour"
	var n_0: N_39dcolour_39d
	var n_colunit: Ncolunit
	init(n_0: N_39dcolour_39d, n_colunit: Ncolunit) do
		self.n_0 = n_0
		self.n_colunit = n_colunit
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_colunit
		abort
	end
end
class Ncompound_body_quantity
	super Ncompound_body
	redef fun node_name do return "compound_body_quantity"
	var n_0: N_39dquantity_39d
	var n_weiunit: Nweiunit
	init(n_0: N_39dquantity_39d, n_weiunit: Nweiunit) do
		self.n_0 = n_0
		self.n_weiunit = n_weiunit
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_weiunit
		abort
	end
end
class Nhops
	super NProd
	redef fun node_name do return "hops"
	var n_kw_hops: Nkw_hops
	var n_hop_profile: Nodes[Nhop_profile]
	init(n_kw_hops: Nkw_hops, n_hop_profile: Nodes[Nhop_profile]) do
		self.n_kw_hops = n_kw_hops
		self.n_hop_profile = n_hop_profile
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_kw_hops
		if i == 1 then return n_hop_profile
		abort
	end
end
class Nhop_profile
	super NProd
	redef fun node_name do return "hop_profile"
	var n_kw_hop: Nkw_hop
	var n_string: Nstring
	var n_hop_profile_body: Nodes[Nhop_profile_body]
	init(n_kw_hop: Nkw_hop, n_string: Nstring, n_hop_profile_body: Nodes[Nhop_profile_body]) do
		self.n_kw_hop = n_kw_hop
		self.n_string = n_string
		self.n_hop_profile_body = n_hop_profile_body
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_kw_hop
		if i == 1 then return n_string
		if i == 2 then return n_hop_profile_body
		abort
	end
end
class Nhop_profile_body
	super NProd
	redef fun node_name do return "hop_profile_body"
end
class Nhop_profile_body_aa
	super Nhop_profile_body
	redef fun node_name do return "hop_profile_body_aa"
	var n_0: N_39dalpha_39d
	var n_number: Nnumber
	init(n_0: N_39dalpha_39d, n_number: Nnumber) do
		self.n_0 = n_0
		self.n_number = n_number
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_number
		abort
	end
end
class Nhop_profile_body_quantity
	super Nhop_profile_body
	redef fun node_name do return "hop_profile_body_quantity"
	var n_0: N_39dquantity_39d
	var n_weiunit: Nweiunit
	init(n_0: N_39dquantity_39d, n_weiunit: Nweiunit) do
		self.n_0 = n_0
		self.n_weiunit = n_weiunit
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_weiunit
		abort
	end
end
class Nhop_profile_body_time
	super Nhop_profile_body
	redef fun node_name do return "hop_profile_body_time"
	var n_0: N_39dtime_39d
	var n_timunit: Ntimunit
	init(n_0: N_39dtime_39d, n_timunit: Ntimunit) do
		self.n_0 = n_0
		self.n_timunit = n_timunit
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_timunit
		abort
	end
end
class Nhop_profile_body_type
	super Nhop_profile_body
	redef fun node_name do return "hop_profile_body_type"
	var n_0: N_39dtype_39d
	var n_hop_type: Nhop_type
	init(n_0: N_39dtype_39d, n_hop_type: Nhop_type) do
		self.n_0 = n_0
		self.n_hop_type = n_hop_type
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_hop_type
		abort
	end
end
class Nhop_profile_body_use
	super Nhop_profile_body
	redef fun node_name do return "hop_profile_body_use"
	var n_0: N_39duse_39d
	var n_hop_use: Nhop_use
	init(n_0: N_39duse_39d, n_hop_use: Nhop_use) do
		self.n_0 = n_0
		self.n_hop_use = n_hop_use
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_hop_use
		abort
	end
end
class Nyeast
	super NProd
	redef fun node_name do return "yeast"
	var n_kw_yeast: Nkw_yeast
	var n_string: Nstring
	var n_yeast_body: Nodes[Nyeast_body]
	init(n_kw_yeast: Nkw_yeast, n_string: Nstring, n_yeast_body: Nodes[Nyeast_body]) do
		self.n_kw_yeast = n_kw_yeast
		self.n_string = n_string
		self.n_yeast_body = n_yeast_body
	end
	redef fun number_of_children do return 3
	redef fun child(i) do
		if i == 0 then return n_kw_yeast
		if i == 1 then return n_string
		if i == 2 then return n_yeast_body
		abort
	end
end
class Nyeast_body
	super NProd
	redef fun node_name do return "yeast_body"
end
class Nyeast_body_floc
	super Nyeast_body
	redef fun node_name do return "yeast_body_floc"
	var n_0: N_39dflocculation_39d
	var n_flocculation_type: Nflocculation_type
	init(n_0: N_39dflocculation_39d, n_flocculation_type: Nflocculation_type) do
		self.n_0 = n_0
		self.n_flocculation_type = n_flocculation_type
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_flocculation_type
		abort
	end
end
class Nyeast_body_att
	super Nyeast_body
	redef fun node_name do return "yeast_body_att"
	var n_0: N_39dattenuation_39d
	var n_number: Nnumber
	init(n_0: N_39dattenuation_39d, n_number: Nnumber) do
		self.n_0 = n_0
		self.n_number = n_number
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_number
		abort
	end
end
class N_start
	super NProd
	redef fun node_name do return "_start"
end
class NStart
	super N_start
	redef fun node_name do return "Start"
	var n_0: Nprog
	var n_1: NEof
	init(n_0: Nprog, n_1: NEof) do
		self.n_0 = n_0
		self.n_1 = n_1
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_1
		abort
	end
end
# State Start
private class LRStateStart
	super LRState
	redef fun to_s do return "Start"
	redef fun error_msg do return "prog, recipe"
	redef fun action(parser) do
		parser.peek_token.action_sStart(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_sStart(parser)
	end
end
# State prog
private class LRStateprog
	super LRState
	redef fun to_s do return "prog"
	redef fun error_msg do return "Eof"
	redef fun action(parser) do
		parser.peek_token.action_sprog(parser)
	end
end
# State recipe
private class LRStaterecipe
	super LRState
	redef fun to_s do return "recipe"
	redef fun error_msg do return "equipment"
	redef fun action(parser) do
		parser.peek_token.action_srecipe(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_recipe_32dequipment)
	end
end
# State kw_recipe
private class LRStatekw_recipe
	super LRState
	redef fun to_s do return "kw_recipe"
	redef fun error_msg do return "string"
	redef fun action(parser) do
		parser.peek_token.action_skw_recipe(parser)
	end
end
# State prog Eof
private class LRStateprog_32dEof
	super LRState
	redef fun to_s do return "prog Eof"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE _start::Start=prog Eof
		var n1 = parser.pop.as(NEof)
		var n0 = parser.pop.as(Nprog)
		var p1 = new NStart(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.stop = true
	end
end
# State recipe equipment
private class LRStaterecipe_32dequipment
	super LRState
	redef fun to_s do return "recipe equipment"
	redef fun error_msg do return "fermentables"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_recipe_32dequipment_32dfermentables)
	end
end
# State recipe kw_equipment
private class LRStaterecipe_32dkw_equipment
	super LRState
	redef fun to_s do return "recipe kw_equipment"
	redef fun error_msg do return "string"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dkw_equipment(parser)
	end
end
# State kw_recipe string
private class LRStatekw_recipe_32dstring
	super LRState
	redef fun to_s do return "kw_recipe string"
	redef fun error_msg do return "recipe_body+, recipe_body"
	redef fun action(parser) do
		parser.peek_token.action_skw_recipe_32dstring(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_skw_recipe_32dstring(parser)
	end
end
# State recipe equipment fermentables
private class LRStaterecipe_32dequipment_32dfermentables
	super LRState
	redef fun to_s do return "recipe equipment fermentables"
	redef fun error_msg do return "hops"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dfermentables(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_recipe_32dequipment_32dfermentables_32dhops)
	end
end
# State recipe equipment kw_fermentables
private class LRStaterecipe_32dequipment_32dkw_fermentables
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables"
	redef fun error_msg do return "compound+, compound"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dkw_fermentables(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_srecipe_32dequipment_32dkw_fermentables(parser)
	end
end
# State recipe kw_equipment string
private class LRStaterecipe_32dkw_equipment_32dstring
	super LRState
	redef fun to_s do return "recipe kw_equipment string"
	redef fun error_msg do return "equipment_body+, equipment_body"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dkw_equipment_32dstring(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_srecipe_32dkw_equipment_32dstring(parser)
	end
end
# State kw_recipe string recipe_body+
private class LRStatekw_recipe_32dstring_32drecipe_body_43d
	super LRState
	redef fun to_s do return "kw_recipe string recipe_body+"
	redef fun error_msg do return "recipe_body"
	redef fun action(parser) do
		parser.peek_token.action_skw_recipe_32dstring_32drecipe_body_43d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_kw_recipe_32dstring_32drecipe_body_43d_32drecipe_body)
	end
end
# State kw_recipe string recipe_body
private class LRStatekw_recipe_32dstring_32drecipe_body
	super LRState
	redef fun to_s do return "kw_recipe string recipe_body"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE recipe_body+::recipe_body+_one=recipe_body
		var n0 = parser.pop.as(Nrecipe_body)
		var prod = new Nodes[Nrecipe_body]
		prod.children.add(n0)
		parser.node_stack.push prod
		parser.goto(goto_Nrecipe_body_43d)
	end
end
# State kw_recipe string 'volume'
private class LRStatekw_recipe_32dstring_32d_39dvolume_39d
	super LRState
	redef fun to_s do return "kw_recipe string \'volume\'"
	redef fun error_msg do return "volunit"
	redef fun action(parser) do
		parser.peek_token.action_skw_recipe_32dstring_32d_39dvolume_39d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_kw_recipe_32dstring_32d_39dvolume_39d_32dvolunit)
	end
end
# State kw_recipe string 'mash_temp'
private class LRStatekw_recipe_32dstring_32d_39dmash_temp_39d
	super LRState
	redef fun to_s do return "kw_recipe string \'mash_temp\'"
	redef fun error_msg do return "tmpunit"
	redef fun action(parser) do
		parser.peek_token.action_skw_recipe_32dstring_32d_39dmash_temp_39d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_kw_recipe_32dstring_32d_39dmash_temp_39d_32dtmpunit)
	end
end
# State recipe equipment fermentables hops
private class LRStaterecipe_32dequipment_32dfermentables_32dhops
	super LRState
	redef fun to_s do return "recipe equipment fermentables hops"
	redef fun error_msg do return "yeast"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dfermentables_32dhops(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_recipe_32dequipment_32dfermentables_32dhops_32dyeast)
	end
end
# State recipe equipment fermentables kw_hops
private class LRStaterecipe_32dequipment_32dfermentables_32dkw_hops
	super LRState
	redef fun to_s do return "recipe equipment fermentables kw_hops"
	redef fun error_msg do return "hop_profile+, hop_profile"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dfermentables_32dkw_hops(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_srecipe_32dequipment_32dfermentables_32dkw_hops(parser)
	end
end
# State recipe equipment kw_fermentables compound+
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dcompound_43d
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables compound+"
	redef fun error_msg do return "compound"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dkw_fermentables_32dcompound_43d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_recipe_32dequipment_32dkw_fermentables_32dcompound_43d_32dcompound)
	end
end
# State recipe equipment kw_fermentables compound
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dcompound
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables compound"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE compound+::compound+_one=compound
		var n0 = parser.pop.as(Ncompound)
		var prod = new Nodes[Ncompound]
		prod.children.add(n0)
		parser.node_stack.push prod
		parser.goto(goto_Ncompound_43d)
	end
end
# State recipe equipment kw_fermentables kw_grain
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_grain"
	redef fun error_msg do return "string"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain(parser)
	end
end
# State recipe equipment kw_fermentables kw_adjunct
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_adjunct
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_adjunct"
	redef fun error_msg do return "string"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dkw_fermentables_32dkw_adjunct(parser)
	end
end
# State recipe equipment kw_fermentables kw_sugar
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_sugar
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_sugar"
	redef fun error_msg do return "string"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dkw_fermentables_32dkw_sugar(parser)
	end
end
# State recipe equipment kw_fermentables kw_extract
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_extract
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_extract"
	redef fun error_msg do return "string"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dkw_fermentables_32dkw_extract(parser)
	end
end
# State recipe kw_equipment string equipment_body+
private class LRStaterecipe_32dkw_equipment_32dstring_32dequipment_body_43d
	super LRState
	redef fun to_s do return "recipe kw_equipment string equipment_body+"
	redef fun error_msg do return "equipment_body"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dkw_equipment_32dstring_32dequipment_body_43d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_recipe_32dkw_equipment_32dstring_32dequipment_body_43d_32dequipment_body)
	end
end
# State recipe kw_equipment string equipment_body
private class LRStaterecipe_32dkw_equipment_32dstring_32dequipment_body
	super LRState
	redef fun to_s do return "recipe kw_equipment string equipment_body"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE equipment_body+::equipment_body+_one=equipment_body
		var n0 = parser.pop.as(Nequipment_body)
		var prod = new Nodes[Nequipment_body]
		prod.children.add(n0)
		parser.node_stack.push prod
		parser.goto(goto_Nequipment_body_43d)
	end
end
# State recipe kw_equipment string 'volume'
private class LRStaterecipe_32dkw_equipment_32dstring_32d_39dvolume_39d
	super LRState
	redef fun to_s do return "recipe kw_equipment string \'volume\'"
	redef fun error_msg do return "volunit"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dkw_equipment_32dstring_32d_39dvolume_39d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_recipe_32dkw_equipment_32dstring_32d_39dvolume_39d_32dvolunit)
	end
end
# State recipe kw_equipment string 'efficiency'
private class LRStaterecipe_32dkw_equipment_32dstring_32d_39defficiency_39d
	super LRState
	redef fun to_s do return "recipe kw_equipment string \'efficiency\'"
	redef fun error_msg do return "number"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dkw_equipment_32dstring_32d_39defficiency_39d(parser)
	end
end
# State kw_recipe string recipe_body+ recipe_body
private class LRStatekw_recipe_32dstring_32drecipe_body_43d_32drecipe_body
	super LRState
	redef fun to_s do return "kw_recipe string recipe_body+ recipe_body"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE recipe_body+::recipe_body+_more=recipe_body+ recipe_body
		var n1 = parser.pop.as(Nrecipe_body)
		var n0 = parser.pop.as(Nodes[Nrecipe_body])
		var prod = n0
		n0.children.add(n1)
		parser.node_stack.push prod
		parser.goto(goto_Nrecipe_body_43d)
	end
end
# State kw_recipe string 'volume' volunit
private class LRStatekw_recipe_32dstring_32d_39dvolume_39d_32dvolunit
	super LRState
	redef fun to_s do return "kw_recipe string \'volume\' volunit"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE recipe_body::recipe_body_volume='volume' volunit
		var n1 = parser.pop.as(Nvolunit)
		var n0 = parser.pop.as(N_39dvolume_39d)
		var p1 = new Nrecipe_body_volume(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nrecipe_body)
	end
end
# State kw_recipe string 'volume' number
private class LRStatekw_recipe_32dstring_32d_39dvolume_39d_32dnumber
	super LRState
	redef fun to_s do return "kw_recipe string \'volume\' number"
	redef fun error_msg do return "volume_unit"
	redef fun action(parser) do
		parser.peek_token.action_skw_recipe_32dstring_32d_39dvolume_39d_32dnumber(parser)
	end
end
# State kw_recipe string 'mash_temp' tmpunit
private class LRStatekw_recipe_32dstring_32d_39dmash_temp_39d_32dtmpunit
	super LRState
	redef fun to_s do return "kw_recipe string \'mash_temp\' tmpunit"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE recipe_body::recipe_body_mash_temp='mash_temp' tmpunit
		var n1 = parser.pop.as(Ntmpunit)
		var n0 = parser.pop.as(N_39dmash_temp_39d)
		var p1 = new Nrecipe_body_mash_temp(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nrecipe_body)
	end
end
# State kw_recipe string 'mash_temp' number
private class LRStatekw_recipe_32dstring_32d_39dmash_temp_39d_32dnumber
	super LRState
	redef fun to_s do return "kw_recipe string \'mash_temp\' number"
	redef fun error_msg do return "temp_unit"
	redef fun action(parser) do
		parser.peek_token.action_skw_recipe_32dstring_32d_39dmash_temp_39d_32dnumber(parser)
	end
end
# State recipe equipment fermentables hops yeast
private class LRStaterecipe_32dequipment_32dfermentables_32dhops_32dyeast
	super LRState
	redef fun to_s do return "recipe equipment fermentables hops yeast"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE prog::prog=recipe equipment fermentables hops yeast
		var n4 = parser.pop.as(Nyeast)
		var n3 = parser.pop.as(Nhops)
		var n2 = parser.pop.as(Nfermentables)
		var n1 = parser.pop.as(Nequipment)
		var n0 = parser.pop.as(Nrecipe)
		var p1 = new Nprog(n0, n1, n2, n3, n4)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nprog)
	end
end
# State recipe equipment fermentables hops kw_yeast
private class LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast
	super LRState
	redef fun to_s do return "recipe equipment fermentables hops kw_yeast"
	redef fun error_msg do return "string"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast(parser)
	end
end
# State recipe equipment fermentables kw_hops hop_profile+
private class LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dhop_profile_43d
	super LRState
	redef fun to_s do return "recipe equipment fermentables kw_hops hop_profile+"
	redef fun error_msg do return "hop_profile"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dhop_profile_43d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dhop_profile_43d_32dhop_profile)
	end
end
# State recipe equipment fermentables kw_hops hop_profile
private class LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dhop_profile
	super LRState
	redef fun to_s do return "recipe equipment fermentables kw_hops hop_profile"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE hop_profile+::hop_profile+_one=hop_profile
		var n0 = parser.pop.as(Nhop_profile)
		var prod = new Nodes[Nhop_profile]
		prod.children.add(n0)
		parser.node_stack.push prod
		parser.goto(goto_Nhop_profile_43d)
	end
end
# State recipe equipment fermentables kw_hops kw_hop
private class LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop
	super LRState
	redef fun to_s do return "recipe equipment fermentables kw_hops kw_hop"
	redef fun error_msg do return "string"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop(parser)
	end
end
# State recipe equipment kw_fermentables compound+ compound
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dcompound_43d_32dcompound
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables compound+ compound"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE compound+::compound+_more=compound+ compound
		var n1 = parser.pop.as(Ncompound)
		var n0 = parser.pop.as(Nodes[Ncompound])
		var prod = n0
		n0.children.add(n1)
		parser.node_stack.push prod
		parser.goto(goto_Ncompound_43d)
	end
end
# State recipe equipment kw_fermentables kw_grain string
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_grain string"
	redef fun error_msg do return "compound_body+, compound_body"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring(parser)
	end
end
# State recipe equipment kw_fermentables kw_adjunct string
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_adjunct string"
	redef fun error_msg do return "compound_body+, compound_body"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_srecipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring(parser)
	end
end
# State recipe equipment kw_fermentables kw_sugar string
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_sugar string"
	redef fun error_msg do return "compound_body+, compound_body"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_srecipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring(parser)
	end
end
# State recipe equipment kw_fermentables kw_extract string
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_extract string"
	redef fun error_msg do return "compound_body+, compound_body"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_srecipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring(parser)
	end
end
# State recipe kw_equipment string equipment_body+ equipment_body
private class LRStaterecipe_32dkw_equipment_32dstring_32dequipment_body_43d_32dequipment_body
	super LRState
	redef fun to_s do return "recipe kw_equipment string equipment_body+ equipment_body"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE equipment_body+::equipment_body+_more=equipment_body+ equipment_body
		var n1 = parser.pop.as(Nequipment_body)
		var n0 = parser.pop.as(Nodes[Nequipment_body])
		var prod = n0
		n0.children.add(n1)
		parser.node_stack.push prod
		parser.goto(goto_Nequipment_body_43d)
	end
end
# State recipe kw_equipment string 'volume' volunit
private class LRStaterecipe_32dkw_equipment_32dstring_32d_39dvolume_39d_32dvolunit
	super LRState
	redef fun to_s do return "recipe kw_equipment string \'volume\' volunit"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE equipment_body::equipment_body_volume='volume' volunit
		var n1 = parser.pop.as(Nvolunit)
		var n0 = parser.pop.as(N_39dvolume_39d)
		var p1 = new Nequipment_body_volume(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nequipment_body)
	end
end
# State recipe kw_equipment string 'efficiency' number
private class LRStaterecipe_32dkw_equipment_32dstring_32d_39defficiency_39d_32dnumber
	super LRState
	redef fun to_s do return "recipe kw_equipment string \'efficiency\' number"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE equipment_body::equipment_body_efficiency='efficiency' number
		var n1 = parser.pop.as(Nnumber)
		var n0 = parser.pop.as(N_39defficiency_39d)
		var p1 = new Nequipment_body_efficiency(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nequipment_body)
	end
end
# State kw_recipe string 'volume' number volume_unit
private class LRStatekw_recipe_32dstring_32d_39dvolume_39d_32dnumber_32dvolume_unit
	super LRState
	redef fun to_s do return "kw_recipe string \'volume\' number volume_unit"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE volunit::volunit=number volume_unit
		var n1 = parser.pop.as(Nvolume_unit)
		var n0 = parser.pop.as(Nnumber)
		var p1 = new Nvolunit(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nvolunit)
	end
end
# State kw_recipe string 'mash_temp' number temp_unit
private class LRStatekw_recipe_32dstring_32d_39dmash_temp_39d_32dnumber_32dtemp_unit
	super LRState
	redef fun to_s do return "kw_recipe string \'mash_temp\' number temp_unit"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE tmpunit::tmpunit=number temp_unit
		var n1 = parser.pop.as(Ntemp_unit)
		var n0 = parser.pop.as(Nnumber)
		var p1 = new Ntmpunit(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Ntmpunit)
	end
end
# State recipe equipment fermentables hops kw_yeast string
private class LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring
	super LRState
	redef fun to_s do return "recipe equipment fermentables hops kw_yeast string"
	redef fun error_msg do return "yeast_body+, yeast_body"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_srecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring(parser)
	end
end
# State recipe equipment fermentables kw_hops hop_profile+ hop_profile
private class LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dhop_profile_43d_32dhop_profile
	super LRState
	redef fun to_s do return "recipe equipment fermentables kw_hops hop_profile+ hop_profile"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE hop_profile+::hop_profile+_more=hop_profile+ hop_profile
		var n1 = parser.pop.as(Nhop_profile)
		var n0 = parser.pop.as(Nodes[Nhop_profile])
		var prod = n0
		n0.children.add(n1)
		parser.node_stack.push prod
		parser.goto(goto_Nhop_profile_43d)
	end
end
# State recipe equipment fermentables kw_hops kw_hop string
private class LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring
	super LRState
	redef fun to_s do return "recipe equipment fermentables kw_hops kw_hop string"
	redef fun error_msg do return "hop_profile_body+, hop_profile_body"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring(parser)
	end
end
# State recipe equipment kw_fermentables kw_grain string compound_body+
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body_43d
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_grain string compound_body+"
	redef fun error_msg do return "compound_body"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body_43d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body_43d_32dcompound_body)
	end
end
# State recipe equipment kw_fermentables kw_grain string compound_body
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_grain string compound_body"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE compound_body+::compound_body+_one=compound_body
		var n0 = parser.pop.as(Ncompound_body)
		var prod = new Nodes[Ncompound_body]
		prod.children.add(n0)
		parser.node_stack.push prod
		parser.goto(goto_Ncompound_body_43d)
	end
end
# State recipe equipment kw_fermentables kw_grain string 'potential'
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_grain string \'potential\'"
	redef fun error_msg do return "grvunit"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d_32dgrvunit)
	end
end
# State recipe equipment kw_fermentables kw_grain string 'colour'
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_grain string \'colour\'"
	redef fun error_msg do return "colunit"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d_32dcolunit)
	end
end
# State recipe equipment kw_fermentables kw_grain string 'quantity'
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_grain string \'quantity\'"
	redef fun error_msg do return "weiunit"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d_32dweiunit)
	end
end
# State recipe equipment kw_fermentables kw_adjunct string compound_body+
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring_32dcompound_body_43d
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_adjunct string compound_body+"
	redef fun error_msg do return "compound_body"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dkw_fermentables_32dkw_adjunct_32dstring_32dcompound_body_43d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body_43d_32dcompound_body)
	end
end
# State recipe equipment kw_fermentables kw_sugar string compound_body+
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring_32dcompound_body_43d
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_sugar string compound_body+"
	redef fun error_msg do return "compound_body"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dkw_fermentables_32dkw_sugar_32dstring_32dcompound_body_43d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body_43d_32dcompound_body)
	end
end
# State recipe equipment kw_fermentables kw_extract string compound_body+
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring_32dcompound_body_43d
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_extract string compound_body+"
	redef fun error_msg do return "compound_body"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dkw_fermentables_32dkw_extract_32dstring_32dcompound_body_43d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_recipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body_43d_32dcompound_body)
	end
end
# State recipe equipment fermentables hops kw_yeast string yeast_body+
private class LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32dyeast_body_43d
	super LRState
	redef fun to_s do return "recipe equipment fermentables hops kw_yeast string yeast_body+"
	redef fun error_msg do return "yeast_body"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32dyeast_body_43d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_recipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32dyeast_body_43d_32dyeast_body)
	end
end
# State recipe equipment fermentables hops kw_yeast string yeast_body
private class LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32dyeast_body
	super LRState
	redef fun to_s do return "recipe equipment fermentables hops kw_yeast string yeast_body"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE yeast_body+::yeast_body+_one=yeast_body
		var n0 = parser.pop.as(Nyeast_body)
		var prod = new Nodes[Nyeast_body]
		prod.children.add(n0)
		parser.node_stack.push prod
		parser.goto(goto_Nyeast_body_43d)
	end
end
# State recipe equipment fermentables hops kw_yeast string 'flocculation'
private class LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dflocculation_39d
	super LRState
	redef fun to_s do return "recipe equipment fermentables hops kw_yeast string \'flocculation\'"
	redef fun error_msg do return "flocculation_type"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dflocculation_39d(parser)
	end
end
# State recipe equipment fermentables hops kw_yeast string 'attenuation'
private class LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dattenuation_39d
	super LRState
	redef fun to_s do return "recipe equipment fermentables hops kw_yeast string \'attenuation\'"
	redef fun error_msg do return "number"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dattenuation_39d(parser)
	end
end
# State recipe equipment fermentables kw_hops kw_hop string hop_profile_body+
private class LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body_43d
	super LRState
	redef fun to_s do return "recipe equipment fermentables kw_hops kw_hop string hop_profile_body+"
	redef fun error_msg do return "hop_profile_body"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body_43d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body_43d_32dhop_profile_body)
	end
end
# State recipe equipment fermentables kw_hops kw_hop string hop_profile_body
private class LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body
	super LRState
	redef fun to_s do return "recipe equipment fermentables kw_hops kw_hop string hop_profile_body"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE hop_profile_body+::hop_profile_body+_one=hop_profile_body
		var n0 = parser.pop.as(Nhop_profile_body)
		var prod = new Nodes[Nhop_profile_body]
		prod.children.add(n0)
		parser.node_stack.push prod
		parser.goto(goto_Nhop_profile_body_43d)
	end
end
# State recipe equipment fermentables kw_hops kw_hop string 'alpha'
private class LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dalpha_39d
	super LRState
	redef fun to_s do return "recipe equipment fermentables kw_hops kw_hop string \'alpha\'"
	redef fun error_msg do return "number"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dalpha_39d(parser)
	end
end
# State recipe equipment fermentables kw_hops kw_hop string 'quantity'
private class LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dquantity_39d
	super LRState
	redef fun to_s do return "recipe equipment fermentables kw_hops kw_hop string \'quantity\'"
	redef fun error_msg do return "weiunit"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dquantity_39d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dquantity_39d_32dweiunit)
	end
end
# State recipe equipment fermentables kw_hops kw_hop string 'time'
private class LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d
	super LRState
	redef fun to_s do return "recipe equipment fermentables kw_hops kw_hop string \'time\'"
	redef fun error_msg do return "timunit"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_recipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d_32dtimunit)
	end
end
# State recipe equipment fermentables kw_hops kw_hop string 'type'
private class LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtype_39d
	super LRState
	redef fun to_s do return "recipe equipment fermentables kw_hops kw_hop string \'type\'"
	redef fun error_msg do return "hop_type"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtype_39d(parser)
	end
end
# State recipe equipment fermentables kw_hops kw_hop string 'use'
private class LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39duse_39d
	super LRState
	redef fun to_s do return "recipe equipment fermentables kw_hops kw_hop string \'use\'"
	redef fun error_msg do return "hop_use"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39duse_39d(parser)
	end
end
# State recipe equipment kw_fermentables kw_grain string compound_body+ compound_body
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32dcompound_body_43d_32dcompound_body
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_grain string compound_body+ compound_body"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE compound_body+::compound_body+_more=compound_body+ compound_body
		var n1 = parser.pop.as(Ncompound_body)
		var n0 = parser.pop.as(Nodes[Ncompound_body])
		var prod = n0
		n0.children.add(n1)
		parser.node_stack.push prod
		parser.goto(goto_Ncompound_body_43d)
	end
end
# State recipe equipment kw_fermentables kw_grain string 'potential' grvunit
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d_32dgrvunit
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_grain string \'potential\' grvunit"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE compound_body::compound_body_potential='potential' grvunit
		var n1 = parser.pop.as(Ngrvunit)
		var n0 = parser.pop.as(N_39dpotential_39d)
		var p1 = new Ncompound_body_potential(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Ncompound_body)
	end
end
# State recipe equipment kw_fermentables kw_grain string 'potential' number
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d_32dnumber
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_grain string \'potential\' number"
	redef fun error_msg do return "gravity_unit"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d_32dnumber(parser)
	end
end
# State recipe equipment kw_fermentables kw_grain string 'colour' colunit
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d_32dcolunit
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_grain string \'colour\' colunit"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE compound_body::compound_body_colour='colour' colunit
		var n1 = parser.pop.as(Ncolunit)
		var n0 = parser.pop.as(N_39dcolour_39d)
		var p1 = new Ncompound_body_colour(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Ncompound_body)
	end
end
# State recipe equipment kw_fermentables kw_grain string 'colour' number
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d_32dnumber
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_grain string \'colour\' number"
	redef fun error_msg do return "colour_unit"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d_32dnumber(parser)
	end
end
# State recipe equipment kw_fermentables kw_grain string 'quantity' weiunit
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d_32dweiunit
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_grain string \'quantity\' weiunit"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE compound_body::compound_body_quantity='quantity' weiunit
		var n1 = parser.pop.as(Nweiunit)
		var n0 = parser.pop.as(N_39dquantity_39d)
		var p1 = new Ncompound_body_quantity(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Ncompound_body)
	end
end
# State recipe equipment kw_fermentables kw_grain string 'quantity' number
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d_32dnumber
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_grain string \'quantity\' number"
	redef fun error_msg do return "weight_unit"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d_32dnumber(parser)
	end
end
# State recipe equipment fermentables hops kw_yeast string yeast_body+ yeast_body
private class LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32dyeast_body_43d_32dyeast_body
	super LRState
	redef fun to_s do return "recipe equipment fermentables hops kw_yeast string yeast_body+ yeast_body"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE yeast_body+::yeast_body+_more=yeast_body+ yeast_body
		var n1 = parser.pop.as(Nyeast_body)
		var n0 = parser.pop.as(Nodes[Nyeast_body])
		var prod = n0
		n0.children.add(n1)
		parser.node_stack.push prod
		parser.goto(goto_Nyeast_body_43d)
	end
end
# State recipe equipment fermentables hops kw_yeast string 'flocculation' flocculation_type
private class LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dflocculation_39d_32dflocculation_type
	super LRState
	redef fun to_s do return "recipe equipment fermentables hops kw_yeast string \'flocculation\' flocculation_type"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE yeast_body::yeast_body_floc='flocculation' flocculation_type
		var n1 = parser.pop.as(Nflocculation_type)
		var n0 = parser.pop.as(N_39dflocculation_39d)
		var p1 = new Nyeast_body_floc(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nyeast_body)
	end
end
# State recipe equipment fermentables hops kw_yeast string 'attenuation' number
private class LRStaterecipe_32dequipment_32dfermentables_32dhops_32dkw_yeast_32dstring_32d_39dattenuation_39d_32dnumber
	super LRState
	redef fun to_s do return "recipe equipment fermentables hops kw_yeast string \'attenuation\' number"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE yeast_body::yeast_body_att='attenuation' number
		var n1 = parser.pop.as(Nnumber)
		var n0 = parser.pop.as(N_39dattenuation_39d)
		var p1 = new Nyeast_body_att(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nyeast_body)
	end
end
# State recipe equipment fermentables kw_hops kw_hop string hop_profile_body+ hop_profile_body
private class LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32dhop_profile_body_43d_32dhop_profile_body
	super LRState
	redef fun to_s do return "recipe equipment fermentables kw_hops kw_hop string hop_profile_body+ hop_profile_body"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE hop_profile_body+::hop_profile_body+_more=hop_profile_body+ hop_profile_body
		var n1 = parser.pop.as(Nhop_profile_body)
		var n0 = parser.pop.as(Nodes[Nhop_profile_body])
		var prod = n0
		n0.children.add(n1)
		parser.node_stack.push prod
		parser.goto(goto_Nhop_profile_body_43d)
	end
end
# State recipe equipment fermentables kw_hops kw_hop string 'alpha' number
private class LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dalpha_39d_32dnumber
	super LRState
	redef fun to_s do return "recipe equipment fermentables kw_hops kw_hop string \'alpha\' number"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE hop_profile_body::hop_profile_body_aa='alpha' number
		var n1 = parser.pop.as(Nnumber)
		var n0 = parser.pop.as(N_39dalpha_39d)
		var p1 = new Nhop_profile_body_aa(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nhop_profile_body)
	end
end
# State recipe equipment fermentables kw_hops kw_hop string 'quantity' weiunit
private class LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dquantity_39d_32dweiunit
	super LRState
	redef fun to_s do return "recipe equipment fermentables kw_hops kw_hop string \'quantity\' weiunit"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE hop_profile_body::hop_profile_body_quantity='quantity' weiunit
		var n1 = parser.pop.as(Nweiunit)
		var n0 = parser.pop.as(N_39dquantity_39d)
		var p1 = new Nhop_profile_body_quantity(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nhop_profile_body)
	end
end
# State recipe equipment fermentables kw_hops kw_hop string 'time' timunit
private class LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d_32dtimunit
	super LRState
	redef fun to_s do return "recipe equipment fermentables kw_hops kw_hop string \'time\' timunit"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE hop_profile_body::hop_profile_body_time='time' timunit
		var n1 = parser.pop.as(Ntimunit)
		var n0 = parser.pop.as(N_39dtime_39d)
		var p1 = new Nhop_profile_body_time(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nhop_profile_body)
	end
end
# State recipe equipment fermentables kw_hops kw_hop string 'time' number
private class LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d_32dnumber
	super LRState
	redef fun to_s do return "recipe equipment fermentables kw_hops kw_hop string \'time\' number"
	redef fun error_msg do return "time_unit"
	redef fun action(parser) do
		parser.peek_token.action_srecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d_32dnumber(parser)
	end
end
# State recipe equipment fermentables kw_hops kw_hop string 'type' hop_type
private class LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtype_39d_32dhop_type
	super LRState
	redef fun to_s do return "recipe equipment fermentables kw_hops kw_hop string \'type\' hop_type"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE hop_profile_body::hop_profile_body_type='type' hop_type
		var n1 = parser.pop.as(Nhop_type)
		var n0 = parser.pop.as(N_39dtype_39d)
		var p1 = new Nhop_profile_body_type(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nhop_profile_body)
	end
end
# State recipe equipment fermentables kw_hops kw_hop string 'use' hop_use
private class LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39duse_39d_32dhop_use
	super LRState
	redef fun to_s do return "recipe equipment fermentables kw_hops kw_hop string \'use\' hop_use"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE hop_profile_body::hop_profile_body_use='use' hop_use
		var n1 = parser.pop.as(Nhop_use)
		var n0 = parser.pop.as(N_39duse_39d)
		var p1 = new Nhop_profile_body_use(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nhop_profile_body)
	end
end
# State recipe equipment kw_fermentables kw_grain string 'potential' number gravity_unit
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dpotential_39d_32dnumber_32dgravity_unit
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_grain string \'potential\' number gravity_unit"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE grvunit::grvunit=number gravity_unit
		var n1 = parser.pop.as(Ngravity_unit)
		var n0 = parser.pop.as(Nnumber)
		var p1 = new Ngrvunit(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Ngrvunit)
	end
end
# State recipe equipment kw_fermentables kw_grain string 'colour' number colour_unit
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dcolour_39d_32dnumber_32dcolour_unit
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_grain string \'colour\' number colour_unit"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE colunit::colunit=number colour_unit
		var n1 = parser.pop.as(Ncolour_unit)
		var n0 = parser.pop.as(Nnumber)
		var p1 = new Ncolunit(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Ncolunit)
	end
end
# State recipe equipment kw_fermentables kw_grain string 'quantity' number weight_unit
private class LRStaterecipe_32dequipment_32dkw_fermentables_32dkw_grain_32dstring_32d_39dquantity_39d_32dnumber_32dweight_unit
	super LRState
	redef fun to_s do return "recipe equipment kw_fermentables kw_grain string \'quantity\' number weight_unit"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE weiunit::weiunit=number weight_unit
		var n1 = parser.pop.as(Nweight_unit)
		var n0 = parser.pop.as(Nnumber)
		var p1 = new Nweiunit(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nweiunit)
	end
end
# State recipe equipment fermentables kw_hops kw_hop string 'time' number time_unit
private class LRStaterecipe_32dequipment_32dfermentables_32dkw_hops_32dkw_hop_32dstring_32d_39dtime_39d_32dnumber_32dtime_unit
	super LRState
	redef fun to_s do return "recipe equipment fermentables kw_hops kw_hop string \'time\' number time_unit"
	redef fun error_msg do return ""
	redef fun action(parser) do
		# REDUCE timunit::timunit=number time_unit
		var n1 = parser.pop.as(Ntime_unit)
		var n0 = parser.pop.as(Nnumber)
		var p1 = new Ntimunit(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Ntimunit)
	end
end
